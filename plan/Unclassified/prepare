1.  go语言编程，使用过java,接触过swift、Object-C、vue等前端技术语言，了解C
2.  DDD领域驱动开发和测试驱动开发，能利用DDD来设计出复合业务场景的架构和指导微服务的合理拆分
3.  Linux操作系统，对Linux内核有一定理解
4. 使用 Linux的基本命令
5. 并发编程
6. TCP/IP、UDP、HTTP等网络协议
7. mysql、postgres数据库的使用和设计
8. restful和GRP接口的设计
9. 容器实现原理，研究过containerd、CRI-O，会使用podman管理pod、image、container，会使用buildah从基础image构建私有image.
10. gokit进行开发微服务和consul搭建中小型微服务的基础设施
11. git进行版本管理
12. 基本的算法使用


1.使用了领域驱动开始的方式分析商业领域逻辑,然后设计领域模型.
2.使用分层设计架构化分为领域层、用例层、接口层、基础层4层来实现
3. 使用第三方库negroni中间件统一处理登录状态判断
4. 使用对象存储服务器存储文件类型资源
5. 设计restful接口

1.分析金融与资本市场课程包含的内容，建立领域模型
2. 使用youtube-dl命令工具下载各种视屏，字幕资源
3.使用goroutine计能并发处理各种任务的处理器
4.设计goroutine管理池管理最大并发的goroutine数量
5. 利用GRPC设计后端和移动端的接口

1.设计爬虫的通用性架构,可以爬取各种类型的网站
2. 将爬虫设计成列表内容页爬取、爬取列表页和爬取内容页三个程序实现,并使rmq,基于redis实现的消息队列进行进程间的通讯
3. 设计各种任务队列和使用go的协程进行并发爬取
4. 使用chromedp模拟浏览器进行爬取
5. 设计资源管理器管理chrome进程的复用
6. 使用redis保存列表页过滤出重复爬取的文章
7. 使用elaticsearch根据关键词进行文章的刷选聚类
8. 使用systemd进行爬虫进程的守护


1. 使用领域驱动开发，划分出项目管理和药品管理两个微服务
2. 分析业务领域的实现逻辑和使用DDD实现领域建模
3. 设计用例场景使用TDD测试驱动开发验证业务逻辑的正确性
4. 使用Mysql数据库存储数据
5. 设计restful接口