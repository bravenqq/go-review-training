图解算法

2020-2-8

Abby Nie
* 二分查找法
* 选择排序
* 分而治之
* 快速排序
* 数组
* 链表
* 散列表

* 图算法

什么是图

  图是模拟一组链接的数据模型

  图有节点和边组成

  一个节点可能与众多边相连，这些相连的节点称作邻居

  节点与节点之间有单一方向的为有向图

  无向图不带箭头，其中的关系是双向的

  图的连接关系一般用map类型数据结构模拟

* 与图相关的问题（不循环有向图）

  从节点A出发，有前往节点B的路径吗（广度优先算法）

  从节点A出发，前往节点B的哪条路径最短（广度优先算法）

  从节点A出发前往节点B的所有路径？

  朋友关系网中有卖芒果的客户吗和关系最近的卖芒果客户是谁（广度优先算法）

  朋友关系网中中所有卖芒果的客户（广度优先算法和深度优先算法）

  带加权（节点与节点之间有长度或距离等）的节点A到节点节点B的最近距离（狄克斯特拉算法）

* 广度优先搜索

  结局图问题的一种算法

能解决什么问题

  从节点A出发，有前往节点B的路径吗（广度优先算法）

  从节点A出发，前往节点B的哪条路径最短（广度优先算法）

  朋友关系网中有卖芒果的客户吗和关系最近的卖芒果客户是谁（广度优先算法）

  朋友关系网中中所有卖芒果的客户（广度优先算法和深度优先算法）

解决步骤

  1.创建一个队列（数组）保存要检查的节点
  2.从队列中获得要检查的节点
  3.检查是否满足条件
  4.满足条件找到了结束循环，否则将这个节点的邻居加入队列
  5.回到第2步直到满足条件或队列为空
  6.如果队列为空说明没有找到合适的节点

  注意检查过的节点不要重复检查，否则可能导致无限循环

算法复杂度

  O(E)检查的深度（边数）
  O(V)检查的节点数
  O(E+V)

* 狄克斯特拉算法

  解决加权图中的问题的算法

能解决什么问题

  加权图中找出最短路径

解决步骤

  1.找出“最便宜”的节点，即可在最短时间内到达的节点
  2.更新该节点的邻居开销
  3.重复这个过程，直到对图中所有节点都这样做了
  4.计算最终路径

  注意已经查找过的节点不用再查找
  如果图中包含负边全，使用贝尔曼-福德算法

* 应用场合举例
  
  从起点A到D中间经常过距离不同的中间点，求其中的最短路径

  物品交换，假设你又一张专辑，要换一架钢琴，求怎么交换能化最少的钱

* 贪婪算法

- 什么是贪婪算法
  
  涉及所有组合中求近视最佳解的算法，每次选择局部最优的解法，是一种快速得到解法的近似最优解

- 如何使用贪婪算法解决问题
  
  每次都选择近视最优解，直到满足条件

- 贪婪算法的使用场合

  解决集合覆盖问题

  NP完全问题

* 使用举例
  
- 教室调度问题，不同时间安排的课程，希望在某间教室山上尽可能多的课且课程安排时间不冲突

  (1)选出结束最早的课程，这是要上的第一节课
  (2)选出结束最早的课程，且开始是在上一堂课结束之后。就是第二堂课
  (3)重复直到所有课程选完

- 集合覆盖问题，求如何选择最少的广播电台能覆盖全美所有州

  (1)选择一个广播电台覆盖最多没有覆盖的州
  (2)重复步骤1直到所有州覆盖完全

* 什么是NP完全问题
    
  求集合覆盖问题，为得到最优解，必须计算每个可能的集合

* 例子
    
-  旅行商问题：旅行商要前往5个不同的城市（上海，北京，深圳，广州，南昌）找出前往这5个城市的最短路径
   
   解决：随便选一个城市出发，然后每次选择要去的最近的城市

- 为棒球队挑选符合条件的队员

  (1)找出符合条件最多的队员
  (3)不断重复直到满足要求（或球队名额已满）

- 如何识别NP问题
  
  元素较少时，算法运行非常快，随着元素增加速度会变得非常慢

  涉及“所有组合”的问题

  不能将问题分解成小问题，必须考虑各种情况，可能是NP问题

  涉及序列（旅行商中的城市序列），且难以解决

  涉及结合（广播台集合），且难以解决



  










